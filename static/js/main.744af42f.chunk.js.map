{"version":3,"sources":["components/Input/Input.js","components/Common/spinner.svg","components/Common/spinner.js","components/Weather/Weather.js","components/App/App.js","index.js"],"names":["Input","onSubmit","onChange","city","className","value","Spinner","src","loading","alt","Weather","weather","error","main","temp","feels_like","name","sys","country","icon","getCurrentDate","API","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","App","useState","setWeather","setCity","setLoading","setError","console","log","e","preventDefault","axios","then","response","data","catch","err","message","request","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGe,SAASA,EAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KAC/C,OACI,uBAAMF,SAAUA,EAAUG,UAAU,oDAApC,UACI,uBAAOA,UAAU,qBAAqBF,SAAUA,EAAUG,MAAOF,IACjE,wBAAQC,UAAU,2BAAlB,4BCPG,UAA0B,oCCY1BE,EATC,WACZ,OACI,qBAAKF,UAAU,gCAAf,SACI,qBAAKG,IAAKC,EAAUC,IAAI,e,MCDrB,SAASC,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,QAAQH,EAAiB,EAAjBA,QAASI,EAAQ,EAARA,MAC9C,OACI,sBAAKR,UAAU,UAAf,UACKQ,GAAS,8BAAMA,IACfJ,GAAW,cAAC,EAAD,IACc,qBAAjBG,EAAQE,KACb,gCACI,sBAAKT,UAAU,OAAf,UAAuBO,EAAQE,KAAKC,KAApC,wBAA0DH,EAAQE,KAAKE,WAAvE,YACA,sBAAKX,UAAU,WAAf,UAA2BO,EAAQK,KAAnC,KAA2CL,EAAQM,IAAIC,WACvD,qBAAKd,UAAU,UAAUK,IAAI,OAAOF,IAAG,2CAAsCI,EAAQA,QAAQ,GAAGQ,KAAzD,UACvC,qBAAKf,UAAU,cAAf,SAA8BO,EAAQA,QAAQ,GAAGE,OACjD,yCAAYO,EAAe,WAE9B,M,kBCXXC,EACI,2CADJA,EAEG,mCAGID,EAAiB,WAAoB,IAAnBE,EAAkB,uDAAR,IACjCC,EAAU,IAAIC,KACdC,EAAOF,EAAQG,UACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAON,EAAQO,cAEnB,MAAM,GAAN,OAAUD,GAAV,OAAiBP,GAAjB,OAA6BK,EAAM,GAAN,WAAaA,GAAb,UAAwBA,IAArD,OAA+DL,GAA/D,OAA2EG,IAGhE,SAASM,IAAO,IAAD,EACIC,mBAAS,IADb,mBACnBrB,EADmB,KACVsB,EADU,OAEFD,mBAAS,UAFP,mBAEnB7B,EAFmB,KAEb+B,EAFa,OAGIF,oBAAS,GAHb,mBAGnBxB,EAHmB,KAGV2B,EAHU,OAIAH,mBAAS,MAJT,mBAInBpB,EAJmB,KAIZwB,EAJY,KAO1BC,QAAQC,IAAI3B,GA8BZ,OACI,sBAAKP,UAAU,MAAf,UACI,cAAC,EAAD,CAAOH,SA1BE,SAACsC,GACdA,EAAEC,iBACFL,GAAW,GACXM,MAAA,UAAapB,EAAb,qBAAkClB,EAAlC,+BAA6DkB,EAA7D,eAEKqB,MAAK,SAAAC,GACFR,GAAW,GACXF,EAAWU,EAASC,MACpBR,EAAS,SAEZS,OAAM,SAAAC,GACHX,GAAW,GACXF,EAAW,IACPa,EAAIH,UACJP,EAASU,EAAIH,SAASC,KAAKG,SAC3BV,QAAQC,IAAIQ,EAAIH,SAASC,OACdE,EAAIE,QACfX,QAAQC,IAAIQ,EAAIE,SAEhBX,QAAQC,IAAI,QAASQ,EAAIC,aAON7C,SA9BlB,SAACqC,GACdL,EAAQK,EAAEU,OAAO5C,QA6BkCF,KAAMA,IACrD,cAAC,EAAD,CAASQ,QAASA,EAASH,QAASA,EAASI,MAAOA,OCxDhEsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrB,EAAD,MAEFsB,SAASC,eAAe,W","file":"static/js/main.744af42f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Input.css'\r\n\r\nexport default function Input({onSubmit, onChange, city}) {\r\n    return (\r\n        <form onSubmit={onSubmit} className='d-flex justify-content-between align-items-center'>\r\n            <input className='form-control input' onChange={onChange} value={city}/* onKeyPress={search} *//>\r\n            <button className='btn btn-primary btnInput'>Get Weather</button>\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spinner.7f937069.svg\";","import React from 'react';\r\nimport loading from './spinner.svg'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='d-flex justify-content-center'>\r\n            <img src={loading}  alt='spinner'/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport { getCurrentDate } from '../App/App'\r\nimport Spinner from '../Common/spinner'\r\nimport './Weather.css'\r\n\r\nexport default function Weather({weather,loading, error}) {\r\n    return (\r\n        <div className='weather'>\r\n            {error && <div>{error}</div>}\r\n            {loading && <Spinner/>}\r\n            {(typeof weather.main !== 'undefined') ? (\r\n                <div>\r\n                    <div className='temp'>{weather.main.temp}℃, feels like:  {weather.main.feels_like}℃</div>\r\n                    <div className='cityName'>{weather.name}, {weather.sys.country}</div>\r\n                    <img className='tempImg' alt='icon' src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}></img>\r\n                    <div className='weatherType'>{weather.weather[0].main}</div>\r\n                    <div>Date: {getCurrentDate('-')}</div>\r\n                </div>\r\n            ) : ('') }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Input from '../Input/Input';\r\nimport Weather from '../Weather/Weather';\r\nimport './app.css'\r\nimport * as axios from 'axios'\r\n\r\n\r\nconst API = {\r\n    base: 'https://api.openweathermap.org/data/2.5/',\r\n    key: '62d6d8c0f9064c75a51385b3e3cfc853'\r\n}\r\n\r\nexport const getCurrentDate = (separator=':') => {\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n    \r\n    return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\r\n}\r\n\r\nexport default function App() {\r\n    const [weather, setWeather] = useState('')\r\n    const [city, setCity] = useState('Almaty')\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    console.log(weather)\r\n\r\n    const onChange = (e) => {\r\n        setCity(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault() \r\n        setLoading(true)\r\n        axios.get(`${API.base}weather?q=${city}&units=metric&appid=${API.key}\r\n        `)\r\n            .then(response => {\r\n                setLoading(false)\r\n                setWeather(response.data)\r\n                setError(null)\r\n            })\r\n            .catch(err  =>  {\r\n                setLoading(false)\r\n                setWeather('')\r\n                if (err.response) {\r\n                    setError(err.response.data.message)\r\n                    console.log(err.response.data);\r\n                    } else if (err.request) {\r\n                    console.log(err.request);\r\n                    } else {\r\n                    console.log('Error', err.message);\r\n                    }\r\n            })     \r\n    }\r\n\r\n    return (\r\n        <div className='app'>\r\n            <Input onSubmit={onSubmit} onChange={onChange} city={city}/>\r\n            <Weather weather={weather} loading={loading} error={error}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}